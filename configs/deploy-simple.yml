name: Simple Deploy Pipeline

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  
env:
  NODE_VERSION: '18.x'

jobs:
  # Build and Test
  build:
    name: Build Applications
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - recursion-chat
          - trading-post
          - slumlord
          - archon
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install and Build
        working-directory: ./active-projects/${{ matrix.project }}
        run: |
          if [ -f "package.json" ]; then
            echo "Installing dependencies for ${{ matrix.project }}..."
            npm ci --legacy-peer-deps || npm install --legacy-peer-deps
            
            echo "Building ${{ matrix.project }}..."
            npm run build || echo "No build script found"
          else
            echo "No package.json found for ${{ matrix.project }}"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.project }}-build
          path: |
            active-projects/${{ matrix.project }}/dist
            active-projects/${{ matrix.project }}/build
            active-projects/${{ matrix.project }}/.next
          retention-days: 3

  # Deploy to Production
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    strategy:
      matrix:
        include:
          - project: recursion-chat
            deploy_path: client/dist
            has_deployment: true
          - project: trading-post
            deploy_path: trading-app-frontend/dist
            has_deployment: true
          - project: slumlord
            deploy_path: web/appwrite-deployment/dist
            has_deployment: true
          - project: archon
            deploy_path: frontend/dist
            has_deployment: false
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Download build artifacts
        if: matrix.has_deployment
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.project }}-build
          path: ./deploy

      - name: Deploy ${{ matrix.project }}
        if: matrix.has_deployment
        run: |
          echo "Deploying ${{ matrix.project }}..."
          # Deployment logic would go here
          # For now, just verify the build exists
          if [ -d "./deploy" ]; then
            echo "✅ Build artifacts found for ${{ matrix.project }}"
            ls -la ./deploy
          else
            echo "⚠️ No build artifacts found for ${{ matrix.project }}"
          fi

  # Health Check
  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: Check Services
        run: |
          sites=(
            "https://chat.recursionsystems.com"
            "https://tradingpost.appwrite.network"
            "https://slumlord.appwrite.network"
          )
          
          for site in "${sites[@]}"; do
            echo "Checking $site..."
            response=$(curl -s -o /dev/null -w "%{http_code}" "$site" || echo "000")
            if [ "$response" = "200" ] || [ "$response" = "301" ] || [ "$response" = "302" ]; then
              echo "✅ $site is responding (HTTP $response)"
            else
              echo "⚠️ $site returned HTTP $response"
            fi
          done

      - name: Summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Build**: ✅ Completed" >> $GITHUB_STEP_SUMMARY
          echo "- **Deploy**: ✅ Attempted" >> $GITHUB_STEP_SUMMARY
          echo "- **Health Check**: ✅ Executed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY